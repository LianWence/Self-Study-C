/*
                        2015.8.13  18:18
        比较动态内存分配和静态内存的区别 
*/ 
#include <stdio.h>
#include <malloc.h>
int main() 
{
	int i = 5;
	double *p = (double *)malloc(8); //请求操作系统为本程序分配8字节的动态存储空间，且该8字节的内存空间对应的变量类型为double 
	                            //(double*)表示强制性地将该存储空间的首字节地址转化为double类型变量的首地址  
	*p = 10.25;  //并且由p指向该动态存储区域,*p等价于那个8字节动态内存存储的double类型的变量！ 
	printf("释放之前：*p = %lf, i = %d\n", *p, i);
	
	free(p); //将指针变量p所指向的8字节内存存储区域给释放掉 
	printf("释放之后：*p = %lf, i = %d\n", *p, i);  //*p已经不属于本程序所控制的变量和那块内存存储，这样做是非法的！！！ 
	
	return 0;
}
/*
     静态存储变量值只有在函数运行完毕后内存才会被释放 
      但动态存储变量随时都可以由程序员通过代码释放掉 
*/
