/*
              2015.8.13  11:14
           深入理解数组下标与指针的关系 
*/

#include <stdio.h>
int main()
{
	int a[5] = {1, 2, 3, 4, 5};
	int i, j;
	
	printf("以数组形式的输出结果：\n");
	for (i = 0; i < 5; i++)
	    printf("%d\t", a[i]);  //  以数组形式输出 
	printf("\n");    
    
	printf("以指针形式的输出结果：\n");
	for (j = 0; j < 5; j++)
	    printf("%d\t", *(a + j));  //  不难发现a[i]=*(a+i)	    
	
	return 0;
}
/*
     不难花现，一个数组的数组名其实是个指针常量，保存的地址就是数组中第一个元素的地址，即指针变量a指向元素a[0];
	  由*a=a[0]推理可得，a[i]=*(a+i); 
      数组在内存条中存储的是一段连续的空间，所以内存单元（即地址）也就是一段连续的“值”，知道了第一个第一个元素的地址，，
  就可以掌握了数组中各个元素的地址，可以用*（数组名 + i）的形式表示数组。	   
*/

